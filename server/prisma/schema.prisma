// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  surname    String
  email      String   @unique
  phone      String
  role       Role     @default(CLIENT)
  address    String
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  provinceId Int
  province   Province @relation(fields: [provinceId], references: [id])
  Cart       Cart[]
  Buy        Buy[]
}

model Province {
  id        Int      @id @default(autoincrement())
  province  String   @unique
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  images      Image[]
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  price       Int
  stock       Int      @default(0)
  isHide      Boolean  @default(false)
  brand       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Cart        Cart[]
  Buy         Buy[]
}

model Image {
  id        Int      @id @default(autoincrement())
  image     String
  imageId   String
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  category  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Cart {
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  productId Int
  quantity  Int

  @@id(name: "cartId", [productId, userId])
}

model Buy {
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  productId Int

  @@id(name: "buyId", [productId, userId])
}

enum Role {
  CLIENT
  ADMIN
}
